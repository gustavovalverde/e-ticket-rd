name: Code Quality & Linting

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    name: Quality Checks & Linting
    permissions:
      contents: read
      checks: write
      pull-requests: write
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check types
        run: pnpm run type-check

      - name: Lint code
        run: pnpm run lint:strict

      - name: Lint CSS
        run: pnpm run lint:css:check

      - name: Check formatting
        run: pnpm run format:check

      - name: Audit security
        run: pnpm audit --audit-level=moderate

  super-linter:
    runs-on: ubuntu-latest
    name: Multi-language Linting
    permissions:
      contents: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Lint files
        uses: super-linter/super-linter@12150456a73e248bdc94d0794898f94e23127c88 # v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          # Disable linters already handled by quality-checks job
          VALIDATE_JSON: false
          VALIDATE_JSCPD: false
          VALIDATE_TYPESCRIPT_ES: false
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_CSS: false

  quality-gate:
    runs-on: ubuntu-latest
    name: Quality Gate
    needs: [quality-checks, super-linter]
    if: always()
    permissions:
      contents: read

    steps:
      - name: Generate quality summary
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get job results
            const qualityResult = '${{ needs.quality-checks.result }}';
            const linterResult = '${{ needs.super-linter.result }}';

            const allPassed = qualityResult === 'success' && linterResult === 'success';

            // Create simple summary like Super-linter
            await core.summary
              .addHeading('üîç Code Quality Summary', 2)
              .addTable([
                [{data: 'Check', header: true}, {data: 'Result', header: true}],
                ['Node.js Quality Checks', qualityResult === 'success' ? '‚úÖ Pass' : '‚ùå Fail'],
                ['Multi-language Linting', linterResult === 'success' ? '‚úÖ Pass' : '‚ùå Fail']
              ])
              .addSeparator()
              .addHeading(allPassed ? '‚úÖ All Checks Passed' : '‚ùå Some Checks Failed', 3)
              .write();

            // Set exit code based on results
            if (!allPassed) {
              core.setFailed('Quality gate failed');
            }
