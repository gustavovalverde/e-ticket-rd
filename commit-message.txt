feat: implement multi-step e-ticket form with progress tracking and auto-save

Major implementation of a comprehensive 6-step e-ticket form system with smart
features, accessibility compliance, and mobile-first design.

## Core Components Added
- Multi-step form orchestrator with TanStack Form integration
- Progress indicator with desktop/mobile variants and WCAG compliance
- 6 form step components: Group Travel, General Info, Personal Info,
  Contact Info, Flight Info, and Customs Declaration
- Comprehensive Zod validation schemas with individual field schemas
- Demo page with success state and form submission handling

## Key Features Implemented
- 6-step workflow with intuitive navigation and progress visualization
- Auto-save functionality every 30 seconds to localStorage
- Smart form logic: flight number auto-fill, group travel data sharing
- Conditional field display based on user selections
- Real-time validation with step completion tracking
- Mobile-first responsive design with touch-friendly interactions
- WCAG 2.1/2.2 AA accessibility compliance

## Technical Improvements
- TanStack Form v1.12.2 with proper API usage
- Individual Zod schemas to avoid .shape property issues with .refine()
- TypeScript type safety with proper form API usage
- Shadcn/ui components integration (progress, badge, form, etc.)
- localStorage persistence for draft form data

## Bug Fixes
- Fixed TanStack Form API usage (form.state.values vs form.getValues())
- Resolved Zod schema .shape accessibility issues with refined schemas
- Corrected form reset and validation logic
- Fixed TypeScript type definitions for form props
- Resolved ESLint errors and code quality issues

## Files Modified/Added
- src/lib/validations/eticket-schemas.ts (validation schemas)
- src/components/forms/progress-indicator.tsx (progress component)
- src/components/forms/multi-step-eticket-form.tsx (main form)
- src/components/forms/steps/*.tsx (6 step components)
- src/app/form/page.tsx (demo page)
- src/app/page.tsx (updated landing page)
- components.json (Shadcn/ui configuration)

This implementation provides the foundation for the modernized e-ticket system
with significant UX improvements over the current linear form approach.

Addresses project objectives for mobile-first design, accessibility compliance,
and smart form features to reduce user input and completion time.
